{"swagger":"2.0","info":{"description":"This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters. For OAuth2 flow, you may use `user` as both username and password when asked to login.","version":"1.0.0","title":"OpenAPI Petstore","contact":{},"license":{"name":"Apache-2.0","url":"http://www.apache.org/licenses/LICENSE-2.0.html"}},"host":"localhost:8080","basePath":"/","tags":[{"name":"pet-api-controller","description":"the pet API"},{"name":"store-api-controller","description":"the store API"},{"name":"user-api-controller","description":"the user API"}],"paths":{"/pet":{"post":{"tags":["pet"],"summary":"Add a new pet to the store","operationId":"addPet","consumes":["application/xml","application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"pet","description":"Pet object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/Pet","originalRef":"Pet"}}],"responses":{"200":{"description":"OK"},"201":{"description":"Created"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"},"405":{"description":"Invalid input"}},"security":[{"petstore_auth":["write:pets","read:pets"]}],"deprecated":false},"put":{"tags":["pet"],"summary":"Update an existing pet","operationId":"updatePet","consumes":["application/xml","application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"pet","description":"Pet object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/Pet","originalRef":"Pet"}}],"responses":{"200":{"description":"OK"},"201":{"description":"Created"},"400":{"description":"Invalid ID supplied"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Pet not found"},"405":{"description":"Validation exception"}},"security":[{"petstore_auth":["write:pets","read:pets"]}],"deprecated":false}},"/pet/findByStatus":{"get":{"tags":["pet"],"summary":"Finds Pets by status","description":"Multiple status values can be provided with comma separated strings","operationId":"findPetsByStatus","produces":["application/xml","application/json"],"parameters":[{"name":"status","in":"query","description":"Status values that need to be considered for filter","required":true,"type":"array","items":{"type":"string"},"collectionFormat":"multi","allowEmptyValue":false,"enum":["available","pending","sold"]}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/Pet","originalRef":"Pet"}}},"400":{"description":"Invalid status value"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"petstore_auth":["write:pets","read:pets"]}],"deprecated":false}},"/pet/findByTags":{"get":{"tags":["pet"],"summary":"Finds Pets by tags","description":"Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.","operationId":"findPetsByTags","produces":["application/xml","application/json"],"parameters":[{"name":"tags","in":"query","description":"Tags to filter by","required":true,"type":"array","items":{"type":"string"},"collectionFormat":"multi","allowEmptyValue":false}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/Pet","originalRef":"Pet"}}},"400":{"description":"Invalid tag value"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"petstore_auth":["write:pets","read:pets"]}],"deprecated":false}},"/pet/{petId}":{"get":{"tags":["pet"],"summary":"Find pet by ID","description":"Returns a single pet","operationId":"getPetById","produces":["application/xml","application/json"],"parameters":[{"name":"petId","in":"path","description":"ID of pet to return","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Pet","originalRef":"Pet"}},"400":{"description":"Invalid ID supplied"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Pet not found"}},"security":[{"api_key":[]}],"deprecated":false},"post":{"tags":["pet"],"summary":"Updates a pet in the store with form data","operationId":"updatePetWithForm","consumes":["application/x-www-form-urlencoded"],"produces":["*/*"],"parameters":[{"name":"name","in":"formData","description":"Updated name of the pet","required":false,"type":"string"},{"name":"petId","in":"path","description":"ID of pet that needs to be updated","required":true,"type":"integer","format":"int64"},{"name":"status","in":"formData","description":"Updated status of the pet","required":false,"type":"string"}],"responses":{"200":{"description":"OK"},"201":{"description":"Created"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"},"405":{"description":"Invalid input"}},"security":[{"petstore_auth":["write:pets","read:pets"]}],"deprecated":false},"delete":{"tags":["pet"],"summary":"Deletes a pet","operationId":"deletePet","produces":["*/*"],"parameters":[{"name":"api_key","in":"header","description":"api_key","required":false,"type":"string"},{"name":"petId","in":"path","description":"Pet id to delete","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"OK"},"204":{"description":"No Content"},"400":{"description":"Invalid pet value"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"}},"security":[{"petstore_auth":["write:pets","read:pets"]}],"deprecated":false}},"/pet/{petId}/uploadImage":{"post":{"tags":["pet"],"summary":"uploads an image","operationId":"uploadFile","consumes":["multipart/form-data"],"produces":["application/json"],"parameters":[{"in":"formData","name":"additionalMetadata","description":"Additional data to pass to server","required":false,"schema":{"type":"string"}},{"name":"file","in":"formData","description":"file to upload","required":false,"type":"file"},{"name":"petId","in":"path","description":"ID of pet to update","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ModelApiResponse","originalRef":"ModelApiResponse"}},"201":{"description":"Created"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"petstore_auth":["write:pets","read:pets"]}],"deprecated":false}},"/store/inventory":{"get":{"tags":["store"],"summary":"Returns pet inventories by status","description":"Returns a map of status codes to quantities","operationId":"getInventory","produces":["application/json"],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"api_key":[]}],"deprecated":false}},"/store/order":{"post":{"tags":["store"],"summary":"Place an order for a pet","operationId":"placeOrder","consumes":["application/json"],"produces":["application/xml","application/json"],"parameters":[{"in":"body","name":"order","description":"order placed for purchasing the pet","required":true,"schema":{"$ref":"#/definitions/Order","originalRef":"Order"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Order","originalRef":"Order"}},"201":{"description":"Created"},"400":{"description":"Invalid Order"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"deprecated":false}},"/store/order/{orderId}":{"get":{"tags":["store"],"summary":"Find purchase order by ID","description":"For valid response try integer IDs with value <= 5 or > 10. Other values will generated exceptions","operationId":"getOrderById","produces":["application/xml","application/json"],"parameters":[{"name":"orderId","in":"path","description":"ID of pet that needs to be fetched","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Order","originalRef":"Order"}},"400":{"description":"Invalid ID supplied"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Order not found"}},"deprecated":false},"delete":{"tags":["store"],"summary":"Delete purchase order by ID","description":"For valid response try integer IDs with value < 1000. Anything above 1000 or nonintegers will generate API errors","operationId":"deleteOrder","produces":["*/*"],"parameters":[{"name":"orderId","in":"path","description":"ID of the order that needs to be deleted","required":true,"type":"string"}],"responses":{"200":{"description":"OK"},"204":{"description":"No Content"},"400":{"description":"Invalid ID supplied"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Order not found"}},"deprecated":false}},"/user":{"post":{"tags":["user"],"summary":"Create user","description":"This can only be done by the logged in user.","operationId":"createUser","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"user","description":"Created user object","required":true,"schema":{"$ref":"#/definitions/User","originalRef":"User"}}],"responses":{"200":{"description":"successful operation"},"201":{"description":"Created"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"deprecated":false}},"/user/createWithArray":{"post":{"tags":["user"],"summary":"Creates list of users with given input array","operationId":"createUsersWithArrayInput","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"user","description":"List of user object","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/User","originalRef":"User"}}}],"responses":{"200":{"description":"successful operation"},"201":{"description":"Created"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"deprecated":false}},"/user/createWithList":{"post":{"tags":["user"],"summary":"Creates list of users with given input array","operationId":"createUsersWithListInput","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"user","description":"List of user object","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/User","originalRef":"User"}}}],"responses":{"200":{"description":"successful operation"},"201":{"description":"Created"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"deprecated":false}},"/user/login":{"get":{"tags":["user"],"summary":"Logs user into the system","operationId":"loginUser","produces":["application/xml","application/json"],"parameters":[{"name":"password","in":"query","description":"The password for login in clear text","required":true,"type":"string","allowEmptyValue":false},{"name":"username","in":"query","description":"The user name for login","required":true,"type":"string","allowEmptyValue":false}],"responses":{"200":{"description":"successful operation","schema":{"type":"string"}},"400":{"description":"Invalid username/password supplied"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"deprecated":false}},"/user/logout":{"get":{"tags":["user"],"summary":"Logs out current logged in user session","operationId":"logoutUser","produces":["*/*"],"responses":{"200":{"description":"successful operation"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"deprecated":false}},"/user/{username}":{"get":{"tags":["user"],"summary":"Get user by user name","operationId":"getUserByName","produces":["application/xml","application/json"],"parameters":[{"name":"username","in":"path","description":"The name that needs to be fetched. Use user1 for testing.","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/User","originalRef":"User"}},"400":{"description":"Invalid username supplied"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"User not found"}},"deprecated":false},"put":{"tags":["user"],"summary":"Updated user","description":"This can only be done by the logged in user.","operationId":"updateUser","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"user","description":"Updated user object","required":true,"schema":{"$ref":"#/definitions/User","originalRef":"User"}},{"name":"username","in":"path","description":"name that need to be deleted","required":true,"type":"string"}],"responses":{"200":{"description":"OK"},"201":{"description":"Created"},"400":{"description":"Invalid user supplied"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"User not found"}},"deprecated":false},"delete":{"tags":["user"],"summary":"Delete user","description":"This can only be done by the logged in user.","operationId":"deleteUser","produces":["*/*"],"parameters":[{"name":"username","in":"path","description":"The name that needs to be deleted","required":true,"type":"string"}],"responses":{"200":{"description":"OK"},"204":{"description":"No Content"},"400":{"description":"Invalid username supplied"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"User not found"}},"deprecated":false}}},"definitions":{"Category":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"name":{"type":"string"}},"title":"Category","description":"A category for a pet"},"File":{"type":"object","properties":{"absolute":{"type":"boolean"},"absoluteFile":{"$ref":"#/definitions/File","originalRef":"File"},"absolutePath":{"type":"string"},"canonicalFile":{"$ref":"#/definitions/File","originalRef":"File"},"canonicalPath":{"type":"string"},"directory":{"type":"boolean"},"executable":{"type":"boolean"},"file":{"type":"boolean"},"freeSpace":{"type":"integer","format":"int64"},"hidden":{"type":"boolean"},"lastModified":{"type":"integer","format":"int64"},"name":{"type":"string"},"parent":{"type":"string"},"parentFile":{"$ref":"#/definitions/File","originalRef":"File"},"path":{"type":"string"},"readable":{"type":"boolean"},"totalSpace":{"type":"integer","format":"int64"},"usableSpace":{"type":"integer","format":"int64"},"writable":{"type":"boolean"}},"title":"File"},"InputStream":{"type":"object","title":"InputStream"},"ModelApiResponse":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"type":{"type":"string"}},"title":"ModelApiResponse","description":"Describes the result of uploading an image resource"},"Order":{"type":"object","properties":{"complete":{"type":"boolean"},"id":{"type":"integer","format":"int64"},"petId":{"type":"integer","format":"int64"},"quantity":{"type":"integer","format":"int32"},"shipDate":{"type":"string","format":"date-time"},"status":{"type":"string","description":"Order Status","enum":["placed","approved","delivered"]}},"title":"Order","description":"An order for a pets from the pet store"},"Pet":{"type":"object","required":["name","photoUrls"],"properties":{"category":{"$ref":"#/definitions/Category","originalRef":"Category"},"id":{"type":"integer","format":"int64"},"name":{"type":"string","example":"doggie"},"photoUrls":{"type":"array","items":{"type":"string"}},"status":{"type":"string","description":"pet status in the store","enum":["available","pending","sold"]},"tags":{"type":"array","items":{"$ref":"#/definitions/Tag","originalRef":"Tag"}}},"title":"Pet","description":"A pet for sale in the pet store"},"Resource":{"type":"object","properties":{"description":{"type":"string"},"file":{"$ref":"#/definitions/File","originalRef":"File"},"filename":{"type":"string"},"inputStream":{"$ref":"#/definitions/InputStream","originalRef":"InputStream"},"open":{"type":"boolean"},"readable":{"type":"boolean"},"uri":{"$ref":"#/definitions/URI","originalRef":"URI"},"url":{"$ref":"#/definitions/URL","originalRef":"URL"}},"title":"Resource"},"Tag":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"name":{"type":"string"}},"title":"Tag","description":"A tag for a pet"},"URI":{"type":"object","properties":{"absolute":{"type":"boolean"},"authority":{"type":"string"},"fragment":{"type":"string"},"host":{"type":"string"},"opaque":{"type":"boolean"},"path":{"type":"string"},"port":{"type":"integer","format":"int32"},"query":{"type":"string"},"rawAuthority":{"type":"string"},"rawFragment":{"type":"string"},"rawPath":{"type":"string"},"rawQuery":{"type":"string"},"rawSchemeSpecificPart":{"type":"string"},"rawUserInfo":{"type":"string"},"scheme":{"type":"string"},"schemeSpecificPart":{"type":"string"},"userInfo":{"type":"string"}},"title":"URI"},"URL":{"type":"object","properties":{"authority":{"type":"string"},"content":{"type":"object"},"defaultPort":{"type":"integer","format":"int32"},"deserializedFields":{"$ref":"#/definitions/URLStreamHandler","originalRef":"URLStreamHandler"},"file":{"type":"string"},"host":{"type":"string"},"path":{"type":"string"},"port":{"type":"integer","format":"int32"},"protocol":{"type":"string"},"query":{"type":"string"},"ref":{"type":"string"},"serializedHashCode":{"type":"integer","format":"int32"},"userInfo":{"type":"string"}},"title":"URL"},"URLStreamHandler":{"type":"object","title":"URLStreamHandler"},"User":{"type":"object","properties":{"email":{"type":"string"},"firstName":{"type":"string"},"id":{"type":"integer","format":"int64"},"lastName":{"type":"string"},"password":{"type":"string"},"phone":{"type":"string"},"userStatus":{"type":"integer","format":"int32","description":"User Status"},"username":{"type":"string"}},"title":"User","description":"A User who is purchasing from the pet store"}}}